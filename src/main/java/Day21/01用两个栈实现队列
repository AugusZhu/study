方法一：双栈

思路和算法

维护两个栈，第一个栈支持插入操作，第二个栈支持删除操作。

根据栈先进后出的特性，我们每次往第一个栈里插入元素后，第一个栈的底部元素是最后插入的元素，第一个栈的顶部元素是下一个待删除的元素。为了维护队列先进先出的特性，我们引入第二个栈，用第二个栈维护待删除的元素，在执行删除操作的时候我们首先看下第二个栈是否为空。如果为空，我们将第一个栈里的元素一个个弹出插入到第二个栈里，这样第二个栈里元素的顺序就是待删除的元素的顺序，要执行删除操作的时候我们直接弹出第二个栈的元素返回即可。

__成员变量__

- 维护两个栈 `stack1` 和 `stack2`，其中 `stack1`支持插入操作，`stack2` 支持删除操作

__构造方法__

- 初始化 `stack1` 和 `stack2` 为空

__插入元素__

插入元素对应方法` appendTail`

-   `stack1` 直接插入元素
删除元素

删除元素对应方法 `deleteHead`

- 如果 `stack2` 为空，则将 `stack1` 里的所有元素弹出插入到 `stack2` 里
- 如果 `stack2` 仍为空，则返回 -1，否则从 `stack2` 弹出一个元素并返回

